# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
# cluster.name: elasticsearch
{% if elasticsearch_cluster_name is defined %}
cluster.name: {{ elasticsearch_cluster_name }}
{% endif %}
#
# ------------------------------------ Node ------------------------------------
#
# https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html
#
# Use a descriptive name for the node:
#
# node.name: "Franz Kafka"
{% if elasticsearch_node_name is defined %}
node.name: {{ elasticsearch_node_name }}
{% endif %}
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# Master-eligible node
#
# A node that has node.master set to true (default),
# which makes it eligible to be elected as the master node,
# which controls the cluster.
#
{% if elasticsearch_node_master is defined %}
node.master: {{ elasticsearch_node_master | to_json }}
{% endif %}
#
# Data node
#
# A node that has node.data set to true (default).
# Data nodes hold data and perform data related operations such as CRUD,
# search, and aggregations.
#
{% if elasticsearch_node_data is defined %}
node.data: {{ elasticsearch_node_data | to_json }}
{% endif %}
#
# Ingest node
#
# A node that has node.ingest set to true (default).
# Ingest nodes are able to apply an ingest pipeline
# to a document in order to transform and enrich the document before indexing.
# With a heavy ingest load, it makes sense to use dedicated ingest nodes and
# to mark the master and data nodes as node.ingest: false.
#
{% if elasticsearch_node_ingest is defined %}
node.ingest: {{ elasticsearch_node_ingest | to_json }}
{% endif %}
#
# Tribe node
#
# A tribe node, configured via the tribe.* settings,
# is a special type of coordinating only node that can connect
# to multiple clusters and perform search and other operations
# across all connected clusters.
#
{% if elasticsearch_node_tribe is defined %}
node.tribe: {{ elasticsearch_node_tribe | to_json }}
{% endif %}
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
# path.data: /path/to/data
{% if elasticsearch_path_data is defined %}
path.data: {{ elasticsearch_path_data }}
{% endif %}
#
# Path to log files:
#
# path.logs: /path/to/logs
{% if elasticsearch_path_logs is defined %}
path.logs: {{ elasticsearch_path_logs }}
{% endif %}
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
{% if elasticsearch_bootstrap_mlockall is defined %}
bootstrap.mlockall: {{ elasticsearch_bootstrap_mlockall | to_json }}
{% endif %}
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
# Example:
#network.host: 10.10.10.10
#network.host: [_local_, 10.10.10.10]
{% if elasticsearch_network_host is defined %}
network.host: {{ elasticsearch_network_host }}
{% endif %}
#
# Set a custom port for HTTP:
#
#http.port: 9200
{% if elasticsearch_http_port is defined %}
http.port: {{ elasticsearch_http_port }}
{% endif %}
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
{% if elasticsearch_discovery_zen_ping_unicast_hosts is defined %}
discovery.zen.ping.unicast.hosts: {{ elasticsearch_discovery_zen_ping_unicast_hosts }}
{% endif %}
#
# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#
#discovery.zen.minimum_master_nodes: 3
{% if elasticsearch_discovery_zen_minimum_master is defined %}
discovery.zen.minimum_master_nodes: {{ elasticsearch_discovery_zen_minimum_master }}
{% endif %}
#
# For more information, consult the zen discovery module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true
{% if elasticsearch_action_destructive_requires_name is defined %}
action.destructive_requires_name: {{ elasticsearch_action_destructive_requires_name | to_json }}
{% endif %}
#
# ---------------------------------- Slow Log ----------------------------------
#
# Shard level query and fetch threshold logging.
#
#index.search.slowlog.threshold.query.warn: 10s
{% if elasticsearch_index_search_slowlog_threshold_query_warn is defined %}
index.search.slowlog.threshold.query.warn: {{ elasticsearch_index_search_slowlog_threshold_query_warn }}
{% endif %}
#
#index.search.slowlog.threshold.query.info: 5s
{% if elasticsearch_index_search_slowlog_threshold_query_info is defined %}
index.search.slowlog.threshold.query.info: {{ elasticsearch_index_search_slowlog_threshold_query_info }}
{% endif %}
#
#index.search.slowlog.threshold.query.debug: 2s
{% if elasticsearch_index_search_slowlog_threshold_query_debug is defined %}
index.search.slowlog.threshold.query.debug: {{ elasticsearch_index_search_slowlog_threshold_query_debug }}
{% endif %}
#
#index.search.slowlog.threshold.query.trace: 500ms
{% if elasticsearch_index_search_slowlog_threshold_query_trace is defined %}
index.search.slowlog.threshold.query.trace: {{ elasticsearch_index_search_slowlog_threshold_query_trace }}
{% endif %}
#
#index.search.slowlog.threshold.fetch.warn: 1s
{% if elasticsearch_index_search_slowlog_threshold_fetch_warn is defined %}
index.search.slowlog.threshold.fetch.warn: {{ elasticsearch_index_search_slowlog_threshold_fetch_warn }}
{% endif %}
#
#index.search.slowlog.threshold.fetch.info: 800ms
{% if elasticsearch_index_search_slowlog_threshold_fetch_info is defined %}
index.search.slowlog.threshold.fetch.info: {{ elasticsearch_index_search_slowlog_threshold_fetch_info }}
{% endif %}
#
#index.search.slowlog.threshold.fetch.debug: 500ms
{% if elasticsearch_index_search_slowlog_threshold_fetch_debug is defined %}
index.search.slowlog.threshold.fetch.debug: {{ elasticsearch_index_search_slowlog_threshold_fetch_debug }}
{% endif %}
#
#index.search.slowlog.threshold.fetch.trace: 200ms
{% if elasticsearch_index_search_slowlog_threshold_fetch_trace is defined %}
index.search.slowlog.threshold.fetch.trace: {{ elasticsearch_index_search_slowlog_threshold_fetch_trace }}
{% endif %}
#
#index.indexing.slowlog.threshold.index.warn: 10s
{% if elasticsearch_index_indexing_slowlog_threshold_index_warn is defined %}
index.indexing.slowlog.threshold.index.warn: {{ elasticsearch_index_indexing_slowlog_threshold_index_warn }}
{% endif %}
#
#index.indexing.slowlog.threshold.index.info: 5s
{% if elasticsearch_index_indexing_slowlog_threshold_index_info is defined %}
index.indexing.slowlog.threshold.index.info: {{ elasticsearch_index_indexing_slowlog_threshold_index_info }}
{% endif %}
#
#index.indexing.slowlog.threshold.index.debug: 2s
{% if elasticsearch_index_indexing_slowlog_threshold_index_debug is defined %}
index.indexing.slowlog.threshold.index.debug: {{ elasticsearch_index_indexing_slowlog_threshold_index_debug }}
{% endif %}
#index.indexing.slowlog.threshold.index.trace: 500ms
{% if elasticsearch_index_indexing_slowlog_threshold_index_trace is defined %}
index.indexing.slowlog.threshold.index.trace: {{ elasticsearch_index_indexing_slowlog_threshold_index_trace }}
{% endif %}
#
# ----------------------------------GC Logging ----------------------------------
#
#monitor.jvm.gc.ParNew.warn: 1000ms
{% if elasticsearch_monitor_jvm_gc_parNew_warn is defined %}
monitor.jvm.gc.ParNew.warn: {{ elasticsearch_monitor_jvm_gc_parNew_warn }}
{% endif %}
#
#monitor.jvm.gc.ParNew.info: 700ms
{% if elasticsearch_monitor_jvm_gc_parNew_info is defined %}
monitor.jvm.gc.ParNew.info: {{ elasticsearch_monitor_jvm_gc_parNew_info }}
{% endif %}
#
#monitor.jvm.gc.ParNew.debug: 400ms
{% if elasticsearch_monitor_jvm_gc_parNew_debug is defined %}
monitor.jvm.gc.ParNew.debug: {{ elasticsearch_monitor_jvm_gc_parNew_debug }}
{% endif %}
#
#monitor.jvm.gc.ConcurrentMarkSweep.warn: 10s
{% if elasticsearch_monitor_jvm_gc_soncurrent_mark_sweep_warn is defined %}
monitor.jvm.gc.ConcurrentMarkSweep.warn: {{ elasticsearch_monitor_jvm_gc_soncurrent_mark_sweep_warn }}
{% endif %}
#
#monitor.jvm.gc.ConcurrentMarkSweep.info: 5s
{% if elasticsearch_monitor_jvm_gc_soncurrent_mark_sweep_info is defined %}
monitor.jvm.gc.ConcurrentMarkSweep.info: {{ elasticsearch_monitor_jvm_gc_soncurrent_mark_sweep_info }}
{% endif %}
#
#monitor.jvm.gc.ConcurrentMarkSweep.debug: 2s
{% if elasticsearch_monitor_jvm_gc_soncurrent_mark_sweep_debug is defined %}
monitor.jvm.gc.ConcurrentMarkSweep.debug: {{ elasticsearch_monitor_jvm_gc_soncurrent_mark_sweep_debug }}
{% endif %}
#
# ---------------------------------- Dynamic Scripting ----------------------------------
#
{% if elasticsearch_script_disable_dynamic is defined %}
script.disable_dynamic: {{ elasticsearch_script_disable_dynamic | to_json }}
{% endif %}

# Need below for Update by query plugin
# See also https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-scripting-painless.html
#script.inline: true
{% if elasticsearch_script_inline is defined %}
script.inline: {{ elasticsearch_script_inline | to_json }}
{% endif %}
#script.update: true
{% if elasticsearch_script_update is defined %}
script.update: {{ elasticsearch_script_update | to_json }}
{% endif %}

# ---------------------------------- CORS Settings ----------------------------------

{% if elasticsearch_http_cors_enabled is defined %}
http.cors.enabled: {{ elasticsearch_http_cors_enabled | to_json }}
{% endif %}

{% if elasticsearch_http_cors_allow_origin is defined %}
http.cors.allow-origin: {{ elasticsearch_http_cors_allow_origin }}
{% endif %}

# ---------------------------------- Awareness Settings ----------------------------------

{% if elasticsearch_cluster_routing_allocation_zone_awareness is defined %}
cluster.routing.allocation.awareness.attributes: zone
node.zone: {{ elasticsearch_node_zone }}
{% endif %}
